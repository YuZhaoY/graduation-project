<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scu.stu.mapper.ReplenishmentMapper">

    <resultMap type="com.scu.stu.pojo.DO.ReplenishmentDO" id="Replenishment">
        <result property="replenishmentId" column="replenishment_id" jdbcType="VARCHAR"/>
        <result property="GMTCreate" column="gmt_create" jdbcType="DATE"/>
        <result property="GMTModified" column="gmt_modified" jdbcType="DATE"/>
        <result property="purchaseId" column="purchase_id" jdbcType="VARCHAR"/>
        <result property="farmerId" column="farmer_id" jdbcType="VARCHAR"/>
        <result property="startExpiration" column="start_expiration" jdbcType="DATE" />
        <result property="expiration" column="expiration" jdbcType="DATE" />
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.scu.stu.pojo.DO.ReplenishmentSubDO" id="ReplenishmentSub">
        <result property="replenishmentId" column="replenishment_id" jdbcType="VARCHAR"/>
        <result property="GMTCreate" column="gmt_create" jdbcType="DATE"/>
        <result property="GMTModified" column="gmt_modified" jdbcType="DATE"/>
        <result property="itemId" column="item_id" jdbcType="VARCHAR"/>
        <result property="quantity" column="quantity" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="base">
        replenishment_id, gmt_create, gmt_modified, purchase_id, farmer_id, start_expiration, expiration, status, version
    </sql>

    <sql id="baseSub">
        replenishment_id, gmt_create, gmt_modified, item_id, quantity
    </sql>
    <select id="query" parameterType="com.scu.stu.pojo.DO.queryParam.ReplenishmentQuery" resultMap="Replenishment">
        select
        <include refid="base" />
        from replenishment_plan
        <where>
            <if test="replenishmentId != null and replenishmentId != ''">
                replenishment_id = #{replenishmentId}
            </if>
            <if test="purchaseId != null and purchaseId != ''">
                and purchase_id = #{purchaseId}
            </if>
            <if test="farmerId != null and farmerId != ''">
                and farmer_id = #{farmerId}
            </if>
            <if test="status != null and status != 0">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="total" parameterType="com.scu.stu.pojo.DO.queryParam.ReplenishmentQuery" resultType="java.lang.Integer">
        select count(*)
        from replenishment_plan
        <where>
            <if test="replenishmentId != null and replenishmentId != ''">
                replenishment_id = #{replenishmentId}
            </if>
            <if test="purchaseId != null and purchaseId != ''">
                and purchase_id = #{purchaseId}
            </if>
            <if test="farmerId != null and farmerId != ''">
                and farmer_id = #{farmerId}
            </if>
            <if test="status != null and status != 0">
                and status = #{status}
            </if>
        </where>
    </select>

    <insert id="create">
        insert into replenishment_plan
        (replenishment_id, gmt_create, purchase_id, farmer_id, start_expiration, expiration, status, version)
        values
        (#{replenishmentId}, now(), #{purchaseId}, #{farmerId}, #{startExpiration}, #{expiration}, #{status}, #{version})
    </insert>

    <update id="update">
        update replenishment_plan
        <set>
            gmt_modified <![CDATA[=]]> now(),
            <if test="purchaseId != null and purchaseId != ''">
                purchase_id = #{purchaseId},
            </if>
            <if test="farmerId != null and farmerId != ''">
                farmer_id = #{farmerId},
            </if>
            <if test="startExpiration != null">
                start_expiration = #{startExpiration},
            </if>
            <if test="expiration != null">
                expiration = #{expiration},
            </if>
            <if test="status != 0">
                status = #{status},
            </if>
            version = version+1,
        </set>
        where replenishment_id = #{replenishmentId}
    </update>

    <update id="updateInvalid">
        update replenishment_plan
        set status = 2, gmt_modified <![CDATA[=]]> now(), version = version+1
        where expiration <![CDATA[<]]> now()
    </update>

    <update id="updateValid">
        update replenishment_plan
        set status = 1, gmt_modified <![CDATA[=]]> now(), version = version+1
        where expiration <![CDATA[>=]]> now() and start_expiration <![CDATA[<=]]> now()
    </update>

    <select id="querySub" resultMap="ReplenishmentSub">
        select
        <include refid="baseSub" />
        from replenishment_sub_plan
        <where>
            <if test="replenishmentId != null and replenishmentId != ''">
                replenishment_id = #{replenishmentId}
            </if>
            <if test="itemId != null and itemId != ''">
                and item_id = #{itemId}
            </if>
        </where>
    </select>

    <select id="batchQuerySub" resultMap="ReplenishmentSub">
        select
        <include refid="baseSub" />
        from replenishment_sub_plan
        where replenishment_id in
        <foreach collection="replenishmentIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <insert id="batchCreateSub">
        insert into replenishment_sub_plan
        (replenishment_id, gmt_create, item_id, quantity)
        values
        <foreach collection="replenishmentSubDOS" item="item" separator=",">
            (#{item.replenishmentId}, now(), #{item.itemId}, #{item.quantity})
        </foreach>
    </insert>

    <delete id="batchDeleteSub">
        delete from replenishment_sub_plan
        where
        <foreach collection="replenishmentSubDOS" item="item" open="(" close=")" separator=",">
            (replenishment_id = #{item.replenishmentId} and item_id = #{item.itemId})
        </foreach>
    </delete>

    <update id="batchUpdateSub">
        <foreach collection="replenishmentSubDOS" item="item" separator=",">
            update replenishment_sub_plan
            set gmt_modified <![CDATA[=]]> now(), quantity = #{item.quantity}
            where replenishment_id = #{item.replenishmentId} and item_id = #{item.itemId}
        </foreach>
    </update>
</mapper>
